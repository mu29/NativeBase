{"version":3,"sources":["../../../src/basic/DeckSwiper.js"],"names":["SWIPE_THRESHOLD","DeckSwiper","props","state","pan","ValueXY","pan2","enter","Value","selectedItem","dataSource","selectedItem2","card1Top","card2Top","fadeAnim","looping","disabled","length","lastCard","setState","undefined","visibleIndex","indexOf","currentIndex","nextIndex","topCard","position","top","right","left","newIdx","newIdx2","setTimeout","nextIndexes","findNextIndexes","onSwiping","timing","toValue","start","spring","friction","selectNext","decay","velocity","x","y","deceleration","_resetState","bind","_panResponder","create","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","evt","gestureState","Math","abs","dx","onPanResponderGrant","e","setOffset","_value","setValue","onPanResponderMove","val","opa","event","onPanResponderRelease","vx","vy","onSwipeRight","onSwipeLeft","translateX","translateY","rotate","interpolate","inputRange","outputRange","opacity","scale","animatedCardStyles","transform","animatedCardStyles2","_root","c","flexDirection","renderEmpty","getCardStyles","getInitialStyle","panHandlers","renderItem","renderBottom","renderTop","propTypes","style","PropTypes","object","array","StyledDeckSwiper"],"mappings":"+1BAAA,4B;AACA;AACA,4B;AACA;AACA,mE;;AAEA,GAAMA,iBAAkB,GAAxB,C;;AAEMC,U;AACJ,oBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,IAAK,GAAI,uBAASC,OAAb,EADM;AAEXC,KAAM,GAAI,uBAASD,OAAb,EAFK;AAGXE,MAAO,GAAI,uBAASC,KAAb,CAAmB,GAAnB,CAHI;AAIXC,aAAc,MAAKP,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CAJH;AAKXC,cAAe,MAAKT,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CALJ;AAMXE,SAAU,IANC;AAOXC,SAAU,KAPC;AAQXC,SAAU,GAAI,uBAASN,KAAb,CAAmB,GAAnB,CARC;AASXO,QAAS,MAAO,OAAKb,KAAL,CAAWa,OAAlB,GAA8B,WAA9B,CAA4C,IAA5C,CAAmD,MAAKb,KAAL,CAAWa,OAT5D;AAUXC,SAAU,MAAKd,KAAL,CAAWQ,UAAX,CAAsBO,MAAtB,GAAiC,CAVhC;AAWXC,SAAU,MAAKhB,KAAL,CAAWQ,UAAX,CAAsBO,MAAtB,GAAiC,CAXhC,CAAb,CAFiB;;AAelB,C;;AAEyC,IAAdP,WAAc,MAAdA,UAAc;AACxC,GAAIA,WAAWO,MAAX,GAAsB,KAAKf,KAAL,CAAWQ,UAAX,CAAsBO,MAAhD,CAAwD;AACtD,GAAIP,WAAWO,MAAX,EAAqB,CAAzB,CAA4B;AAC1B,KAAKE,QAAL;AACK,KAAKhB,KADV;AAEEM,aAAcC,WAAW,CAAX,CAFhB;AAGEC,cAAeS,SAHjB;AAIEJ,SAAUN,WAAWO,MAAX,GAAsB,CAJlC;AAKEC,SAAUR,WAAWO,MAAX,GAAsB,CALlC;;AAOA;AACD;;AAED,GAAMI,cAAeX,WAAWY,OAAX,CAAmB,KAAKnB,KAAL,CAAWM,YAA9B,CAArB;AACA,GAAMc,cAAeF,aAAe,CAAf,CAAmBA,aAAe,CAAlC,CAAsCA,YAA3D;AACA,GAAMG,WAAYD,aAAe,CAAf,GAAqBb,WAAWO,MAAhC,CAAyC,CAAzC,CAA6CM,aAAe,CAA9E;;AAEA,KAAKJ,QAAL,CAAc;AACZV,aAAcC,WAAWa,YAAX,CADF;AAEZZ,cAAeD,WAAWc,SAAX,CAFH,CAAd;;AAID;AACF,C;;AAEiB;AAChB,MAAO;AACLC,QAAS;AACPC,SAAU,UADH;AAEPC,IAAK,CAFE;AAGPC,MAAO,CAHA;AAIPC,KAAM,CAJC,CADJ,CAAP;;;AAQD,C;;AAEeN,Y,CAAc;AAC5B,GAAIO,QAASP,aAAe,CAA5B;AACA,GAAIQ,SAAUR,aAAe,CAA7B;;AAEA;AACEQ,QAAU,KAAK7B,KAAL,CAAWQ,UAAX,CAAsBO,MAAtB,CAA+B,CAAzC;AACAa,SAAW,KAAK5B,KAAL,CAAWQ,UAAX,CAAsBO,MAAtB,CAA+B,CAF5C;AAGE;AACA,MAAO,CAACa,MAAD,CAAS,CAAT,CAAP;AACD,CALD,IAKO,IAAIA,OAAS,KAAK5B,KAAL,CAAWQ,UAAX,CAAsBO,MAAtB,CAA+B,CAA5C,CAA+C;AACpD,MAAO,CAAC,CAAD,CAAI,CAAJ,CAAP;AACD,CAFM,IAEA;AACL,MAAO,CAACa,MAAD,CAASC,OAAT,CAAP;AACD;AACF,C;;AAEY;AACX,GAAMrB,YAAa,KAAKR,KAAL,CAAWQ,UAA9B;AACA,GAAIa,cAAeb,WAAWY,OAAX,CAAmB,KAAKnB,KAAL,CAAWM,YAA9B,CAAnB;;;AAGA,GAAI,CAAC,KAAKN,KAAL,CAAWY,OAAhB,CAAyB;;AAEvB,GAAIQ,eAAiBb,WAAWO,MAAX,CAAoB,CAAzC,CAA4C;AAC1C,MAAO,MAAKE,QAAL,CAAc;AACnBH,SAAU,IADS,CAAd,CAAP;;AAGD,CAJD,IAIO,IAAIO,eAAiBb,WAAWO,MAAX,CAAoB,CAAzC,CAA4C;;AAEjD,MAAOe,YAAW,UAAM;AACtB,OAAKb,QAAL,CAAc;AACZV,aAAcC,WAAWa,aAAe,CAA1B,CADF,CAAd;;AAGAS,WAAW,UAAM;AACf,OAAKb,QAAL,CAAc;AACZD,SAAU,IADE,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,CATM,CASJ,EATI,CAAP;AAUD;AACF;;AAED,GAAIe,aAAc,KAAKC,eAAL,CAAqBX,YAArB,CAAlB;AACAS,WAAW,UAAM;AACf,OAAKb,QAAL,CAAc;AACZV,aAAc,OAAKP,KAAL,CAAWQ,UAAX,CAAsBuB,YAAY,CAAZ,CAAtB,CADF,CAAd;;AAGAD,WAAW,UAAM;AACf,OAAKb,QAAL,CAAc;AACZR,cAAe,OAAKT,KAAL,CAAWQ,UAAX,CAAsBuB,YAAY,CAAZ,CAAtB,CADH,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,CATD,CASG,EATH;AAUD,C;;AAEY;AACX,GAAI,KAAK/B,KAAL,CAAWiC,SAAf,CAA0B,KAAKjC,KAAL,CAAWiC,SAAX,CAAqB,OAArB;AAC1BH,WAAW,UAAM;AACf,sBAASI,MAAT,CAAgB,OAAKjC,KAAL,CAAWW,QAA3B,CAAqC,CAAEuB,QAAS,CAAX,CAArC,EAAqDC,KAArD;AACA,sBAASC,MAAT,CAAgB,OAAKpC,KAAL,CAAWI,KAA3B,CAAkC,CAAE8B,QAAS,CAAX,CAAcG,SAAU,CAAxB,CAAlC,EAA+DF,KAA/D;AACA,OAAKG,UAAL;AACA,sBAASC,KAAT,CAAe,OAAKvC,KAAL,CAAWC,GAA1B,CAA+B;AAC7BuC,SAAU,CAAEC,EAAG,CAAL,CAAQC,EAAG,CAAX,CADmB;AAE7BC,aAAc,IAFe,CAA/B;AAGGR,KAHH,CAGS,OAAKS,WAAL,CAAiBC,IAAjB,QAHT;AAID,CARD,CAQG,GARH;AASD,C;;AAEW;AACV,GAAI,KAAK9C,KAAL,CAAWiC,SAAf,CAA0B,KAAKjC,KAAL,CAAWiC,SAAX,CAAqB,MAArB;AAC1BH,WAAW,UAAM;AACf,sBAASI,MAAT,CAAgB,OAAKjC,KAAL,CAAWW,QAA3B,CAAqC,CAAEuB,QAAS,CAAX,CAArC,EAAqDC,KAArD;AACA,sBAASC,MAAT,CAAgB,OAAKpC,KAAL,CAAWI,KAA3B,CAAkC,CAAE8B,QAAS,CAAX,CAAcG,SAAU,CAAxB,CAAlC,EAA+DF,KAA/D;AACA,OAAKG,UAAL;AACA,sBAASC,KAAT,CAAe,OAAKvC,KAAL,CAAWC,GAA1B,CAA+B;AAC7BuC,SAAU,CAAEC,EAAG,CAAC,CAAN,CAASC,EAAG,CAAZ,CADmB;AAE7BC,aAAc,IAFe,CAA/B;AAGGR,KAHH,CAGS,OAAKS,WAAL,CAAiBC,IAAjB,QAHT;AAID,CARD,CAQG,GARH;AASD,C;;AAEoB;AACnB,KAAKC,aAAL,CAAqB,0BAAaC,MAAb,CAAoB;AACvCC,gCAAiC,iDAAM,KAAN,EADM;AAEvCC,mCAAoC,4CAACC,GAAD,CAAMC,YAAN,CAAuB;AACzD,MAAOC,MAAKC,GAAL,CAASF,aAAaG,EAAtB,EAA4B,CAAnC;AACD,CAJsC;;AAMvCC,oBAAqB,6BAACC,CAAD,CAAIL,YAAJ,CAAqB;AACxC,OAAKnD,KAAL,CAAWC,GAAX,CAAewD,SAAf,CAAyB;AACvBhB,EAAG,OAAKzC,KAAL,CAAWC,GAAX,CAAewC,CAAf,CAAiBiB,MADG;AAEvBhB,EAAG,OAAK1C,KAAL,CAAWC,GAAX,CAAeyC,CAAf,CAAiBgB,MAFG,CAAzB;;AAIA,OAAK1D,KAAL,CAAWC,GAAX,CAAe0D,QAAf,CAAwB,CAAElB,EAAG,CAAL,CAAQC,EAAG,CAAX,CAAxB;AACD,CAZsC;;AAcvCkB,mBAAoB,4BAACJ,CAAD,CAAIL,YAAJ,CAAqB;AACvC,GAAIA,aAAaG,EAAb,CAAkB,EAAtB,CAA0B;AACxB,GAAI,OAAKvD,KAAL,CAAWiC,SAAf;AACE,OAAKjC,KAAL,CAAWiC,SAAX,CAAqB,OAArB,CAA8BmB,aAAaG,EAA3C;AACH,CAHD,IAGO,IAAIH,aAAaG,EAAb,CAAkB,CAAC,EAAvB,CAA2B;AAChC,GAAI,OAAKvD,KAAL,CAAWiC,SAAf;AACE,OAAKjC,KAAL,CAAWiC,SAAX,CAAqB,MAArB,CAA6BmB,aAAaG,EAA1C;AACH;AACD,GAAIO,KAAMT,KAAKC,GAAL,CAASF,aAAaG,EAAb,CAAkB,MAA3B,CAAV;AACA,GAAIQ,KAAMV,KAAKC,GAAL,CAASF,aAAaG,EAAb,CAAkB,MAA3B,CAAV;AACA,GAAIO,IAAM,GAAV,CAAe;AACbA,IAAM,GAAN;AACD;AACD,sBAAS5B,MAAT,CAAgB,OAAKjC,KAAL,CAAWW,QAA3B,CAAqC,CAAEuB,QAAS,IAAM2B,GAAjB,CAArC,EAA6D1B,KAA7D;AACA,sBAASC,MAAT,CAAgB,OAAKpC,KAAL,CAAWI,KAA3B,CAAkC;AAChC8B,QAAS,IAAM2B,GADiB;AAEhCxB,SAAU,CAFsB,CAAlC;AAGGF,KAHH;AAIA,sBAAS4B,KAAT,CAAe,CAAC,IAAD,CAAO,CAAET,GAAI,OAAKtD,KAAL,CAAWC,GAAX,CAAewC,CAArB,CAAP,CAAf,EAAiDe,CAAjD,CAAoDL,YAApD;AACD,CAjCsC;;AAmCvCa,sBAAuB,+BAACR,CAAD,OAAmB,IAAbS,GAAa,OAAbA,EAAa,CAATC,EAAS,OAATA,EAAS;AACxC,GAAI,OAAKnE,KAAL,CAAWiC,SAAf,CAA0B,OAAKjC,KAAL,CAAWiC,SAAX,CAAqB,IAArB;AAC1B,GAAIQ,SAAJ;;AAEA,GAAIyB,IAAM,CAAV,CAAa;AACXzB,SAAW,oBAAMyB,EAAN,CAAU,GAAV,CAAe,EAAf,CAAX;AACD,CAFD,IAEO,IAAIA,GAAK,CAAT,CAAY;AACjBzB,SAAW,oBAAMyB,GAAK,CAAC,CAAZ,CAAe,GAAf,CAAoB,EAApB,EAA0B,CAAC,CAAtC;AACD;;AAED,GAAIb,KAAKC,GAAL,CAAS,OAAKrD,KAAL,CAAWC,GAAX,CAAewC,CAAf,CAAiBiB,MAA1B,EAAoC7D,eAAxC,CAAyD;AACvD,GAAI2C,SAAW,CAAf,CAAkB;AAChB,OAAKzC,KAAL,CAAWoE,YAAX;AACI,OAAKpE,KAAL,CAAWoE,YAAX,CAAwB,OAAKnE,KAAL,CAAWM,YAAnC,CADJ;AAEIW,SAFJ;AAGA,OAAKqB,UAAL;AACD,CALD,IAKO;AACL,OAAKvC,KAAL,CAAWqE,WAAX;AACI,OAAKrE,KAAL,CAAWqE,WAAX,CAAuB,OAAKpE,KAAL,CAAWM,YAAlC,CADJ;AAEIW,SAFJ;AAGA,OAAKqB,UAAL;AACD;;AAED,sBAASC,KAAT,CAAe,OAAKvC,KAAL,CAAWC,GAA1B,CAA+B;AAC7BuC,SAAU,CAAEC,EAAGD,QAAL,CAAeE,EAAGwB,EAAlB,CADmB;AAE7BvB,aAAc,IAFe,CAA/B;AAGGR,KAHH,CAGS,OAAKS,WAAL,CAAiBC,IAAjB,QAHT;AAID,CAjBD,IAiBO;AACL,sBAAST,MAAT,CAAgB,OAAKpC,KAAL,CAAWC,GAA3B,CAAgC;AAC9BiC,QAAS,CAAEO,EAAG,CAAL,CAAQC,EAAG,CAAX,CADqB;AAE9BL,SAAU,CAFoB,CAAhC;AAGGF,KAHH;AAID;AACF,CApEsC,CAApB,CAArB;;AAsED,C;;AAEa;AACZ,KAAKnC,KAAL,CAAWC,GAAX,CAAe0D,QAAf,CAAwB,CAAElB,EAAG,CAAL,CAAQC,EAAG,CAAX,CAAxB;AACA,KAAK1C,KAAL,CAAWI,KAAX,CAAiBuD,QAAjB,CAA0B,GAA1B;AACA,KAAK3D,KAAL,CAAWW,QAAX,CAAoBgD,QAApB,CAA6B,GAA7B;AACA,KAAK3C,QAAL,CAAc;AACZP,SAAU,CAAC,KAAKT,KAAL,CAAWS,QADV;AAEZC,SAAU,CAAC,KAAKV,KAAL,CAAWU,QAFV,CAAd;;AAIA,GAAI,KAAKX,KAAL,CAAWiC,SAAf,CAA0B,KAAKjC,KAAL,CAAWiC,SAAX,CAAqB,IAArB;AAC3B,C;;AAEe;AACa,KAAKhC,KADlB,CACRC,GADQ,QACRA,GADQ,CACHE,IADG,QACHA,IADG,CACGC,KADH,QACGA,KADH;;AAGiB,CAACH,IAAIwC,CAAL,CAAQxC,IAAIyC,CAAZ,CAHjB,CAGT2B,UAHS,UAGGC,UAHH;;;AAMd,GAAIC,QAAStE,IAAIwC,CAAJ,CAAM+B,WAAN,CAAkB;AAC7BC,WAAY,CAAC,CAAC,GAAF,CAAO,CAAP,CAAU,GAAV,CADiB;AAE7BC,YAAa,CAAC,QAAD,CAAW,MAAX,CAAmB,OAAnB,CAFgB,CAAlB,CAAb;;;AAKA,GAAIC,SAAU1E,IAAIwC,CAAJ,CAAM+B,WAAN,CAAkB;AAC9BC,WAAY,CAAC,CAAC,GAAF,CAAO,CAAP,CAAU,GAAV,CADkB;AAE9BC,YAAa,CAAC,GAAD,CAAM,CAAN,CAAS,GAAT,CAFiB,CAAlB,CAAd;;AAIA,GAAIE,OAAQxE,KAAZ;;AAEA,GAAIyE,oBAAqB;AACvBC,UAAW,CAAC,CAAET,qBAAF,CAAD,CAAiB,CAAEC,qBAAF,CAAjB,CAAiC,CAAEC,aAAF,CAAjC,CADY;AAEvBI,eAFuB,CAAzB;;AAIA,GAAII,qBAAsB,CAAED,UAAW,CAAC,CAAEF,WAAF,CAAD,CAAb,CAA1B;;AAEA,MAAO,CAACC,kBAAD,CAAqBE,mBAArB,CAAP;AACD,C;;AAEQ;AACP,GAAI,KAAK/E,KAAL,CAAWa,QAAf,CAAyB;;AAEvB;AACE;AACE,IAAK,sBAAM,QAAKmE,KAAL,CAAaC,CAAnB,EADP;AAEE,MAAO,CAAE1D,SAAU,UAAZ,CAAwB2D,cAAe,QAAvC,CAFT;;;AAKI;AACG,KAAKnF,KAAL,CAAWoF,WAAX,EAA0B,KAAKpF,KAAL,CAAWoF,WAAX,EAD7B,CALJ,CADF;;;;;AAYD,CAdD,IAcO,IAAI,KAAKnF,KAAL,CAAWe,QAAf,CAAyB;;AAE9B;AACE;AACE,IAAK,sBAAM,QAAKiE,KAAL,CAAaC,CAAnB,EADP;AAEE,MAAO,CAAE1D,SAAU,UAAZ,CAAwB2D,cAAe,QAAvC,CAFT;;AAIG,KAAKlF,KAAL,CAAWM,YAAX,GAA4BW,SAA5B;AACG,kGADH;AAEG;AACE,oDAAU,IAAV;AACE,MAAO;AACL,KAAKmE,aAAL,GAAqB,CAArB,CADK;AAEL,KAAKC,eAAL,GAAuB/D,OAFlB;AAGL,CAAEqD,QAAS,KAAK3E,KAAL,CAAWW,QAAtB,CAHK,CADT;;AAMM,KAAKmC,aAAL,CAAmBwC,WANzB;;AAQG,KAAKvF,KAAL,CAAWoF,WAAX,EAA0B,KAAKpF,KAAL,CAAWoF,WAAX,EAR7B,CADF;;AAWE,oDAAU,IAAV;AACE,MAAO;AACL,KAAKC,aAAL,GAAqB,CAArB,CADK;AAEL,KAAKC,eAAL,GAAuB/D,OAFlB,CADT;;AAKM,KAAKwB,aAAL,CAAmBwC,WALzB;;AAOG,KAAKvF,KAAL,CAAWwF,UAAX,CAAsB,KAAKvF,KAAL,CAAWM,YAAjC,CAPH,CAXF,CANN,CADF;;;;;AA8BD,CAhCM,IAgCA;AACL;AACE;AACE,IAAK,sBAAM,QAAK0E,KAAL,CAAaC,CAAnB,EADP;AAEE,MAAO,CAAE1D,SAAU,UAAZ,CAAwB2D,cAAe,QAAvC,CAFT;;AAIG,KAAKlF,KAAL,CAAWM,YAAX,GAA4BW,SAA5B;AACG,kGADH;AAEG;AACE,oDAAU,IAAV;AACE,MAAO;AACL,KAAKmE,aAAL,GAAqB,CAArB,CADK;AAEL,KAAKC,eAAL,GAAuB/D,OAFlB;AAGL,CAAEqD,QAAS,KAAK3E,KAAL,CAAWW,QAAtB,CAHK,CADT;;AAMM,KAAKmC,aAAL,CAAmBwC,WANzB;;AAQG,KAAKvF,KAAL,CAAWyF,YAAX;AACG,KAAKzF,KAAL,CAAWyF,YAAX,CAAwB,KAAKxF,KAAL,CAAWQ,aAAnC,CADH;AAEG,KAAKT,KAAL,CAAWwF,UAAX,CAAsB,KAAKvF,KAAL,CAAWQ,aAAjC,CAVN,CADF;;AAaE,oDAAU,IAAV;AACE,MAAO;AACL,KAAK4E,aAAL,GAAqB,CAArB,CADK;AAEL,KAAKC,eAAL,GAAuB/D,OAFlB,CADT;;AAKM,KAAKwB,aAAL,CAAmBwC,WALzB;;AAOG,KAAKvF,KAAL,CAAW0F,SAAX;AACG,KAAK1F,KAAL,CAAW0F,SAAX,CAAqB,KAAKzF,KAAL,CAAWM,YAAhC,CADH;AAEG,KAAKP,KAAL,CAAWwF,UAAX,CAAsB,KAAKvF,KAAL,CAAWM,YAAjC,CATN,CAbF,CANN,CADF;;;;;AAkCD;AACF,C;;;AAGHR,WAAW4F,SAAX;;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;AAGEtF,WAAY,gBAAMqF,SAAN,CAAgBE,KAH9B;;;AAMA,GAAMC,kBAAmB;AACvB,uBADuB;AAEvB,EAFuB;;AAIvBjG,UAJuB,CAAzB,C;;AAM6BA,U,CAApBiG,gB","file":"DeckSwiper.js","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Animated, PanResponder, ViewPropTypes } from \"react-native\";\nimport clamp from \"clamp\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nconst SWIPE_THRESHOLD = 120;\n\nclass DeckSwiper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pan: new Animated.ValueXY(),\n      pan2: new Animated.ValueXY(),\n      enter: new Animated.Value(0.8),\n      selectedItem: this.props.dataSource[0],\n      selectedItem2: this.props.dataSource[1],\n      card1Top: true,\n      card2Top: false,\n      fadeAnim: new Animated.Value(0.8),\n      looping: typeof this.props.looping === 'undefined' ? true : this.props.looping,\n      disabled: this.props.dataSource.length === 0,\n      lastCard: this.props.dataSource.length === 1\n    };\n  }\n\n  componentWillReceiveProps({ dataSource }) {\n    if (dataSource.length !== this.props.dataSource.length) {\n      if (dataSource.length <= 1) {\n        this.setState({\n          ...this.state,\n          selectedItem: dataSource[0],\n          selectedItem2: undefined,\n          disabled: dataSource.length === 0,\n          lastCard: dataSource.length === 1\n        });\n        return;\n      }\n\n      const visibleIndex = dataSource.indexOf(this.state.selectedItem);\n      const currentIndex = visibleIndex < 0 ? visibleIndex + 1 : visibleIndex;\n      const nextIndex = currentIndex + 1 === dataSource.length ? 0 : currentIndex + 1;\n\n      this.setState({\n        selectedItem: dataSource[currentIndex],\n        selectedItem2: dataSource[nextIndex],\n      });\n    }\n  }\n\n  getInitialStyle() {\n    return {\n      topCard: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        left: 0\n      }\n    };\n  }\n\n  findNextIndexes(currentIndex) {\n    let newIdx = currentIndex + 1;\n    let newIdx2 = currentIndex + 2;\n\n    if (\n      newIdx2 > this.props.dataSource.length - 1 &&\n      newIdx === this.props.dataSource.length - 1\n    ) {\n      return [newIdx, 0];\n    } else if (newIdx > this.props.dataSource.length - 1) {\n      return [0, 1];\n    } else {\n      return [newIdx, newIdx2];\n    }\n  }\n\n  selectNext() {\n    const dataSource = this.props.dataSource;\n    let currentIndex = dataSource.indexOf(this.state.selectedItem);\n\n    // if not looping, check for these conditionals and if true return from selectNext()\n    if (!this.state.looping) {\n      // reached end -> only display static renderEmpty() -> no swiping\n      if (currentIndex === dataSource.length - 1) {\n        return this.setState({\n          disabled: true\n        });\n      } else if (currentIndex === dataSource.length - 2) {\n        // show last card with renderEmpty() component behind it\n        return setTimeout(() => {\n          this.setState({\n            selectedItem: dataSource[currentIndex + 1]\n          });\n          setTimeout(() => {\n            this.setState({\n              lastCard: true\n            });\n          }, 350);\n        }, 50);\n      }\n    }\n\n    let nextIndexes = this.findNextIndexes(currentIndex);\n    setTimeout(() => {\n      this.setState({\n        selectedItem: this.props.dataSource[nextIndexes[0]]\n      });\n      setTimeout(() => {\n        this.setState({\n          selectedItem2: this.props.dataSource[nextIndexes[1]]\n        });\n      }, 350);\n    }, 50);\n  }\n\n  swipeRight() {\n    if (this.props.onSwiping) this.props.onSwiping(\"right\");\n    setTimeout(() => {\n      Animated.timing(this.state.fadeAnim, { toValue: 1 }).start();\n      Animated.spring(this.state.enter, { toValue: 1, friction: 7 }).start();\n      this.selectNext();\n      Animated.decay(this.state.pan, {\n        velocity: { x: 8, y: 1 },\n        deceleration: 0.98\n      }).start(this._resetState.bind(this));\n    }, 300);\n  }\n\n  swipeLeft() {\n    if (this.props.onSwiping) this.props.onSwiping(\"left\");\n    setTimeout(() => {\n      Animated.timing(this.state.fadeAnim, { toValue: 1 }).start();\n      Animated.spring(this.state.enter, { toValue: 1, friction: 7 }).start();\n      this.selectNext();\n      Animated.decay(this.state.pan, {\n        velocity: { x: -8, y: 1 },\n        deceleration: 0.98\n      }).start(this._resetState.bind(this));\n    }, 300);\n  }\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetResponderCapture: () => true,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        return Math.abs(gestureState.dx) > 5;\n      },\n\n      onPanResponderGrant: (e, gestureState) => {\n        this.state.pan.setOffset({\n          x: this.state.pan.x._value,\n          y: this.state.pan.y._value\n        });\n        this.state.pan.setValue({ x: 0, y: 0 });\n      },\n\n      onPanResponderMove: (e, gestureState) => {\n        if (gestureState.dx > 20) {\n          if (this.props.onSwiping)\n            this.props.onSwiping(\"right\", gestureState.dx);\n        } else if (gestureState.dx < -20) {\n          if (this.props.onSwiping)\n            this.props.onSwiping(\"left\", gestureState.dx);\n        }\n        let val = Math.abs(gestureState.dx * 0.0013);\n        let opa = Math.abs(gestureState.dx * 0.0022);\n        if (val > 0.2) {\n          val = 0.2;\n        }\n        Animated.timing(this.state.fadeAnim, { toValue: 0.8 + val }).start();\n        Animated.spring(this.state.enter, {\n          toValue: 0.8 + val,\n          friction: 7\n        }).start();\n        Animated.event([null, { dx: this.state.pan.x }])(e, gestureState);\n      },\n\n      onPanResponderRelease: (e, { vx, vy }) => {\n        if (this.props.onSwiping) this.props.onSwiping(null);\n        var velocity;\n\n        if (vx >= 0) {\n          velocity = clamp(vx, 4.5, 10);\n        } else if (vx < 0) {\n          velocity = clamp(vx * -1, 4.5, 10) * -1;\n        }\n\n        if (Math.abs(this.state.pan.x._value) > SWIPE_THRESHOLD) {\n          if (velocity > 0) {\n            this.props.onSwipeRight\n              ? this.props.onSwipeRight(this.state.selectedItem)\n              : undefined;\n            this.selectNext();\n          } else {\n            this.props.onSwipeLeft\n              ? this.props.onSwipeLeft(this.state.selectedItem)\n              : undefined;\n            this.selectNext();\n          }\n\n          Animated.decay(this.state.pan, {\n            velocity: { x: velocity, y: vy },\n            deceleration: 0.98\n          }).start(this._resetState.bind(this));\n        } else {\n          Animated.spring(this.state.pan, {\n            toValue: { x: 0, y: 0 },\n            friction: 4\n          }).start();\n        }\n      }\n    });\n  }\n\n  _resetState() {\n    this.state.pan.setValue({ x: 0, y: 0 });\n    this.state.enter.setValue(0.8);\n    this.state.fadeAnim.setValue(0.8);\n    this.setState({\n      card1Top: !this.state.card1Top,\n      card2Top: !this.state.card2Top\n    });\n    if (this.props.onSwiping) this.props.onSwiping(null);\n  }\n\n  getCardStyles() {\n    let { pan, pan2, enter } = this.state;\n\n    let [translateX, translateY] = [pan.x, pan.y];\n    // let [translateX, translateY] = [pan2.x, pan2.y];\n\n    let rotate = pan.x.interpolate({\n      inputRange: [-700, 0, 700],\n      outputRange: [\"-10deg\", \"0deg\", \"10deg\"]\n    });\n\n    let opacity = pan.x.interpolate({\n      inputRange: [-320, 0, 320],\n      outputRange: [0.9, 1, 0.9]\n    });\n    let scale = enter;\n\n    let animatedCardStyles = {\n      transform: [{ translateX }, { translateY }, { rotate }],\n      opacity\n    };\n    let animatedCardStyles2 = { transform: [{ scale }] };\n\n    return [animatedCardStyles, animatedCardStyles2];\n  }\n\n  render() {\n    if (this.state.disabled) {\n      // disable swiping and renderEmpty\n      return (\n        <View\n          ref={c => (this._root = c)}\n          style={{ position: \"relative\", flexDirection: \"column\" }}\n        >\n          {\n            <View>\n              {this.props.renderEmpty && this.props.renderEmpty()}\n            </View>\n          }\n        </View>\n      );\n    } else if (this.state.lastCard) {\n      // display renderEmpty underneath last viable card\n      return (\n        <View\n          ref={c => (this._root = c)}\n          style={{ position: \"relative\", flexDirection: \"column\" }}\n        >\n          {this.state.selectedItem === undefined\n            ? <View />\n            : <View>\n                <Animated.View\n                  style={[\n                    this.getCardStyles()[1],\n                    this.getInitialStyle().topCard,\n                    { opacity: this.state.fadeAnim }\n                  ]}\n                  {...this._panResponder.panHandlers}\n                >\n                  {this.props.renderEmpty && this.props.renderEmpty()}\n                </Animated.View>\n                <Animated.View\n                  style={[\n                    this.getCardStyles()[0],\n                    this.getInitialStyle().topCard\n                  ]}\n                  {...this._panResponder.panHandlers}\n                >\n                  {this.props.renderItem(this.state.selectedItem)}\n                </Animated.View>\n              </View>}\n        </View>\n      );\n    } else {\n      return (\n        <View\n          ref={c => (this._root = c)}\n          style={{ position: \"relative\", flexDirection: \"column\" }}\n        >\n          {this.state.selectedItem === undefined\n            ? <View />\n            : <View>\n                <Animated.View\n                  style={[\n                    this.getCardStyles()[1],\n                    this.getInitialStyle().topCard,\n                    { opacity: this.state.fadeAnim }\n                  ]}\n                  {...this._panResponder.panHandlers}\n                >\n                  {this.props.renderBottom\n                    ? this.props.renderBottom(this.state.selectedItem2)\n                    : this.props.renderItem(this.state.selectedItem2)}\n                </Animated.View>\n                <Animated.View\n                  style={[\n                    this.getCardStyles()[0],\n                    this.getInitialStyle().topCard\n                  ]}\n                  {...this._panResponder.panHandlers}\n                >\n                  {this.props.renderTop\n                    ? this.props.renderTop(this.state.selectedItem)\n                    : this.props.renderItem(this.state.selectedItem)}\n                </Animated.View>\n              </View>}\n        </View>\n      );\n    }\n  }\n}\n\nDeckSwiper.propTypes = {\n  ...ViewPropTypes,\n  style: React.PropTypes.object,\n  dataSource: React.PropTypes.array\n};\n\nconst StyledDeckSwiper = connectStyle(\n  \"NativeBase.DeckSwiper\",\n  {},\n  mapPropsToStyleNames\n)(DeckSwiper);\n\nexport { StyledDeckSwiper as DeckSwiper };\n"]}